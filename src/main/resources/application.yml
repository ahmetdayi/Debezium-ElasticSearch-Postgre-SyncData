spring:
  sql:
    init:
      mode: always
  kafka:
    consumer:
      bootstrap-servers: localhost:59092
      group-id: GroupId
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

        # value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      # properties:
      # spring.json.trusted.packages: '*'
    producer:
      bootstrap-servers: localhost:59092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  datasource:
    url: jdbc:postgresql://localhost:5432/outbox
    username: postgres
    password: example
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: 'false'
    hibernate:
      ddl-auto: update

  elasticsearch:
    uris: http://localhost:9200
    connection-timeout: 10s



